// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Sample {
  id        Int      @id @default(autoincrement())
  name      String
  code      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("samples") // if you want to use snake_case format
}

model User {
  id       Int    @id @default(autoincrement())
  name     String
  username String
  password String
  role     Role

  @@map("users")
}

enum Role {
  SUPERADMIN @map("SUPERADMIN")
  PERSONALIA @map("PERSONALIA")
  ADMIN      @map("ADMIN")
}

model Department {
  id       Int        @id @default(autoincrement())
  name     String
  JobTitle JobTitle[]
  Employee Employee[]

  @@map("departments")
}

model JobTitle {
  id           Int     @id @default(autoincrement())
  name         String
  description  String? @db.LongText
  departmentId Int

  department Department @relation(fields: [departmentId], references: [id])
  Employee   Employee[]

  @@map("job_titles")
}

enum EmployeeType {
  KARYAWAN_LEPAS @map("KARYAWAN_LEPAS")
  KARYAWAN_TETAP @map("KARYAWAN_TETAP")
}

model Employee {
  id           Int          @id @default(autoincrement())
  name         String
  employeeType EmployeeType
  address      String?
  phoneNumber  String?
  hiringDate   DateTime
  updatedAt    DateTime     @updatedAt
  deletedAt    DateTime?
  departmentId Int
  jobTitleId   Int
  salary       Int

  department        Department          @relation(fields: [departmentId], references: [id])
  jobTitle          JobTitle            @relation(fields: [jobTitleId], references: [id])
  Overtime          Overtime[]
  Attendance        Attendance[]
  Payroll           Payroll[]
  EmployeeTunjangan EmployeeTunjangan[]
  EmployeePotongan  EmployeePotongan[]

  @@map("employees")
}

enum OvertimeType {
  HARI_KERJA @map("HARI_KERJA")
  HARI_LIBUR @map("HARI_LIBUR")
}

model Overtime {
  id         Int          @id @default(autoincrement())
  date       DateTime
  workHours  Int
  type       OvertimeType
  employeeId Int

  employee Employee @relation(fields: [employeeId], references: [id])

  @@map("overtimes")
}

enum AttendanceStatus {
  HADIR   @map("HADIR")
  MANGKIR @map("MANGKIR")
  SAKIT   @map("SAKIT")
  CUTI    @map("CUTI")
}

model Attendance {
  id         Int              @id @default(autoincrement())
  date       DateTime
  status     AttendanceStatus
  employeeId Int

  employee Employee @relation(fields: [employeeId], references: [id])

  @@map("attendances")
}

model Payroll {
  id             Int      @id @default(autoincrement())
  baseSalary     Int
  payPeriodStart DateTime
  payPeriodEnd   DateTime
  grossPay       Int
  netPay         Int
  employeeId     Int
  totalTunjangan Int
  totalPotongan  Int

  employee Employee @relation(fields: [employeeId], references: [id])

  @@map("payrolls")
}

model Tunjangan {
  id          Int       @id @default(autoincrement())
  name        String
  description String    @db.LongText
  amount      Int
  deletedAt   DateTime?

  EmployeeTunjangan EmployeeTunjangan[]

  @@map("tunjangan")
}

model EmployeeTunjangan {
  id          Int @id @default(autoincrement())
  employeeId  Int
  tunjanganId Int

  employee  Employee  @relation(fields: [employeeId], references: [id])
  tunjangan Tunjangan @relation(fields: [tunjanganId], references: [id])

  @@map("employee_tunjanga")
}

model Potongan {
  id          Int       @id @default(autoincrement())
  name        String
  description String    @db.LongText
  amount      Int
  deletedAt   DateTime?

  EmployeePotongan EmployeePotongan[]

  @@map("potongan")
}

model EmployeePotongan {
  id         Int @id @default(autoincrement())
  employeeId Int
  potonganId Int

  employee Employee @relation(fields: [employeeId], references: [id])
  potongan Potongan @relation(fields: [potonganId], references: [id])

  @@map("employee_potongan")
}

model Holiday {
  id          Int      @id @default(autoincrement())
  date        DateTime // Date of the holiday
  holidayName String // Name of the holiday
}
